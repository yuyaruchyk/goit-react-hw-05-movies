{"version":3,"file":"static/js/735.9b9ea262.chunk.js","mappings":"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","sources":["Appi/Api.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["\nimport axios from \"axios\";\n\nconst API_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNTRlMGMyYmJkNTJjZDAzMzkyNWExYjgxODM5ZTRlNyIsInN1YiI6IjY1NWQxMmJiNTM4NjZlMDBjNWI1Njk5MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WyF-b_8sGIA9cdHsnOrzXb55sa3ksoGYwveJJ6XSFvU';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nconst api = axios.create({\n    baseURL,\n    method: 'POST',\n    params: {\n        language: 'en-US',\n    },\n    headers: { Authorization: `Bearer ${API_KEY}` },\n})\n\nexport async function getTrending() {\n    const response = await api.get(`trending/movie/day`);\n    return response.data.results;\n}\n\nexport async function getSearch(query) {\n    const response = await api.get(`search/movie`, { params: { query } });\n    return response.data;\n}\n\nexport async function getMovie(id) {\n    const response = await api.get(`movie/${id}`);\n    return response.data;\n}\n\nexport async function getMovieCredits(id) {\n    const response = await api.get(`movie/${id}/credits`);\n    return response.data;\n}\nexport async function getMovieReviews(id) {\n    const response = await api.get(`movie/${id}/reviews`);\n    return response.data;\n}","import styled from 'styled-components';\n\n\nexport const DetailContainer = styled.div`\ndisplay: flex;\ngap: 20px;\n  }\n`;","import { DetailContainer } from \"./MovieDetails.styled\";\n\nconst MovieInfo = ({ data }) => {\n  const { img, title, year, score, overview, genres } = data;\n\n  return (\n    <div>\n      <DetailContainer>\n        <img src={img} alt={title} height=\"500\" />\n        <div>\n          <h2>\n            {title}\n            <span> ({year})</span>\n          </h2>\n          <div>User score: {score}</div>\n          <h3>Overview</h3>\n          <span>{overview}</span>\n          <h3>Genres</h3>\n          <span>{genres}</span>\n        </div>\n      </DetailContainer>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavPages = styled.div`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-weight: 500;\n  font-size: 15px;\n  padding: 4px;\n  color: black;\n\n  &:hover,\n  &:focus {\n    color: #404bbf;\n  }\n`;\nexport const StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  display: block;\n  font-weight: 500;\n  font-size: 25px;\n  padding: 4px;\n  color: black;\n\n  &:hover,\n  &:focus {\n    color: #404bbf;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useRef } from \"react\";\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { getMovie } from 'Appi/Api';\nimport MovieInfo from 'components/MovieDetails/MovieDetails';\n\nimport { StyledNavPages, StyledNavLink } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n\n   const location = useLocation();\n    const backLink = useRef(location.state?.from ?? \"/\")\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const response = await getMovie(movieId);\n        const info = {\n         img: response.poster_path ? `https://image.tmdb.org/t/p/w500${response.poster_path}` : 'No image',\n          title: response.title,\n          year: response.release_date.slice(0, 4),\n          overview:\n            response.overview !== ''\n              ? response.overview\n              : 'There is no overview',\n          genres:\n            response.genres.length > 0\n              ? response.genres?.map(genre => genre.name).join(', ')\n              : 'No genres',\n          score: response.vote_average,\n        };\n\n        setDetails(info);\n        return response;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    getMovieDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n     \n      {details && <MovieInfo data={details} />}\n      <hr />\n      <StyledNavPages>\n      <StyledNavLink to={backLink.current}>Back to all films</StyledNavLink>\n      <StyledNavLink to={`cast`}>Cast</StyledNavLink>         \n        <StyledNavLink to={`reviews`}>Reviews</StyledNavLink>\n       \n      </StyledNavPages>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["api","axios","baseURL","method","params","language","headers","Authorization","concat","getTrending","_getTrending","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","getSearch","_x","_getSearch","_callee2","query","_context2","getMovie","_x2","_getMovie","_callee3","id","_context3","getMovieCredits","_x3","_getMovieCredits","_callee4","_context4","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5","DetailContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","img","title","year","score","overview","genres","_jsx","children","_jsxs","src","alt","height","StyledNavPages","StyledNavLink","NavLink","_templateObject2","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","details","setDetails","location","useLocation","backLink","useRef","state","from","useEffect","_getMovieDetails","_response$genres","info","poster_path","release_date","slice","length","map","genre","name","join","vote_average","t0","console","error","getMovieDetails","MovieInfo","to","current","Outlet"],"sourceRoot":""}